// Generated by using torchexport::export() -> do not edit by hand
#include "torchoptx/torchoptx.h"
#include <lantern/types.h>
#include "torchoptx/torchoptx_types.h"
void * p_torchoptx_last_error = NULL;

TORCHOPTX_API void* torchoptx_last_error()
{
  return p_torchoptx_last_error;
}

TORCHOPTX_API void torchoptx_last_error_clear()
{
  p_torchoptx_last_error = NULL;
}

optim_sgd torchoptx_sgd (torch::TensorList params);
TORCHOPTX_API void* _torchoptx_sgd (void* params) {
  try {
    return  make_raw::SGD(torchoptx_sgd(from_raw::TensorList(params)));
  } TORCHOPTX_HANDLE_EXCEPTION
  return (void*) NULL;
}
void torchoptx_sgd_step (optim_sgd opt);
TORCHOPTX_API void _torchoptx_sgd_step (void* opt) {
  try {
     (torchoptx_sgd_step(from_raw::SGD(opt)));
  } TORCHOPTX_HANDLE_EXCEPTION
  
}
void torchoptx_sgd_zero_grad (optim_sgd opt);
TORCHOPTX_API void _torchoptx_sgd_zero_grad (void* opt) {
  try {
     (torchoptx_sgd_zero_grad(from_raw::SGD(opt)));
  } TORCHOPTX_HANDLE_EXCEPTION
  
}
void delete_optim_sgd (void* x);
TORCHOPTX_API void _delete_optim_sgd (void* x) {
  try {
     (delete_optim_sgd(x));
  } TORCHOPTX_HANDLE_EXCEPTION
  
}
